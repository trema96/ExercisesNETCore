//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonDTO", Namespace="http://schemas.datacontract.org/2004/07/WebServicePostPerson")]
    public partial class PersonDTO : object
    {
        
        private string AdresseField;
        
        private string DistriktField;
        
        private string EfternavnField;
        
        private string FornavnField;
        
        private int PersonnrField;
        
        private int PostnrField;
        
        private string TlfnrField;
        
        private int VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adresse
        {
            get
            {
                return this.AdresseField;
            }
            set
            {
                this.AdresseField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Distrikt
        {
            get
            {
                return this.DistriktField;
            }
            set
            {
                this.DistriktField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Efternavn
        {
            get
            {
                return this.EfternavnField;
            }
            set
            {
                this.EfternavnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fornavn
        {
            get
            {
                return this.FornavnField;
            }
            set
            {
                this.FornavnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Personnr
        {
            get
            {
                return this.PersonnrField;
            }
            set
            {
                this.PersonnrField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Postnr
        {
            get
            {
                return this.PostnrField;
            }
            set
            {
                this.PostnrField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tlfnr
        {
            get
            {
                return this.TlfnrField;
            }
            set
            {
                this.TlfnrField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version
        {
            get
            {
                return this.VersionField;
            }
            set
            {
                this.VersionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPersonWcfService")]
    public interface IPersonWcfService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWcfService/GetAllePersoner", ReplyAction="http://tempuri.org/IPersonWcfService/GetAllePersonerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.PersonDTO>> GetAllePersonerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWcfService/GetAllePersonerMedNavn", ReplyAction="http://tempuri.org/IPersonWcfService/GetAllePersonerMedNavnResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.PersonDTO>> GetAllePersonerMedNavnAsync(string fornavn, string efternavn, bool orderEfternavnFornavn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWcfService/GetAllePersonerMedPostnr", ReplyAction="http://tempuri.org/IPersonWcfService/GetAllePersonerMedPostnrResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.PersonDTO>> GetAllePersonerMedPostnrAsync(int fraPostnr, int tilPostnr, bool orderEfternavnFornavn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWcfService/GetPersonMedPersonnr", ReplyAction="http://tempuri.org/IPersonWcfService/GetPersonMedPersonnrResponse")]
        System.Threading.Tasks.Task<ServiceReference1.PersonDTO> GetPersonMedPersonnrAsync(int personnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonWcfService/RetPersonData", ReplyAction="http://tempuri.org/IPersonWcfService/RetPersonDataResponse")]
        System.Threading.Tasks.Task<bool> RetPersonDataAsync(ServiceReference1.PersonDTO person);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IPersonWcfServiceChannel : ServiceReference1.IPersonWcfService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class PersonWcfServiceClient : System.ServiceModel.ClientBase<ServiceReference1.IPersonWcfService>, ServiceReference1.IPersonWcfService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public PersonWcfServiceClient() : 
                base(PersonWcfServiceClient.GetDefaultBinding(), PersonWcfServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IPersonWcfService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PersonWcfServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(PersonWcfServiceClient.GetBindingForEndpoint(endpointConfiguration), PersonWcfServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PersonWcfServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(PersonWcfServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PersonWcfServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(PersonWcfServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public PersonWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.PersonDTO>> GetAllePersonerAsync()
        {
            return base.Channel.GetAllePersonerAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.PersonDTO>> GetAllePersonerMedNavnAsync(string fornavn, string efternavn, bool orderEfternavnFornavn)
        {
            return base.Channel.GetAllePersonerMedNavnAsync(fornavn, efternavn, orderEfternavnFornavn);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReference1.PersonDTO>> GetAllePersonerMedPostnrAsync(int fraPostnr, int tilPostnr, bool orderEfternavnFornavn)
        {
            return base.Channel.GetAllePersonerMedPostnrAsync(fraPostnr, tilPostnr, orderEfternavnFornavn);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersonDTO> GetPersonMedPersonnrAsync(int personnr)
        {
            return base.Channel.GetPersonMedPersonnrAsync(personnr);
        }
        
        public System.Threading.Tasks.Task<bool> RetPersonDataAsync(ServiceReference1.PersonDTO person)
        {
            return base.Channel.RetPersonDataAsync(person);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPersonWcfService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IPersonWcfService))
            {
                return new System.ServiceModel.EndpointAddress("http://webservicedemo.datamatiker-skolen.dk/PersonWcfService.svc/soap");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return PersonWcfServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IPersonWcfService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return PersonWcfServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IPersonWcfService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IPersonWcfService,
        }
    }
}
